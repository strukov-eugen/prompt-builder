networks:
  dev:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './frontend/dist:/var/www/frontend/dist'
      - './backend:/var/www/backend'
    depends_on:
      - backend
      - frontend
    networks:
      - dev
    restart: always

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: backend
    volumes:
      - './backend:/var/www/backend'
    networks:
      - dev
    restart: always
    expose:
      - 9000
    depends_on:
    - mysql

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: frontend
    volumes:
      - './frontend:/app'
    networks:
      - dev
    restart: always
    expose:
      - 3000

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: prompt_builder
      MYSQL_USER: prompt_user
      MYSQL_PASSWORD: prompt_pass
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/init-scripts:/docker-entrypoint-initdb.d
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    networks:
      - dev

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - dev

volumes:
  mysql_data: